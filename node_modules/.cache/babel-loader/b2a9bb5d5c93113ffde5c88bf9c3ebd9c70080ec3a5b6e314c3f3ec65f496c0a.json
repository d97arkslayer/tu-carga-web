{"ast":null,"code":"import axios from \"axios\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n  // Updated to your local API\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Authentication related functions\nexport const authAPI = {\n  login: async (email, password) => {\n    try {\n      const response = await apiClient.post(\"/auth/login\", {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: \"Error connecting to server\"\n      };\n    }\n  }\n};\n\n// Example function to fetch data\nexport const fetchData = async endpoint => {\n  try {\n    const response = await apiClient.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw error;\n  }\n};\n\n// Example function to post data\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await apiClient.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error posting data:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","baseURL","headers","authAPI","login","email","password","response","post","data","error","_error$response","message","fetchData","endpoint","get","console","postData"],"sources":["/Users/esteban/Documents/Esteban/TuCarga/app/tucarga-app/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:4000/api\", // Updated to your local API\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Authentication related functions\nexport const authAPI = {\n  login: async (email: string, password: string) => {\n    try {\n      const response = await apiClient.post(\"/auth/login\", { email, password });\n      return response.data;\n    } catch (error: any) {\n      throw error.response?.data || { message: \"Error connecting to server\" };\n    }\n  },\n};\n\n// Example function to fetch data\nexport const fetchData = async (endpoint: string) => {\n  try {\n    const response = await apiClient.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    throw error;\n  }\n};\n\n// Example function to post data\nexport const postData = async (endpoint: string, data: any) => {\n  try {\n    const response = await apiClient.post(endpoint, data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error posting data:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,OAAO,GAAG;EACrBC,KAAK,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,KAAK;IAChD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,SAAS,CAACS,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACzE,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;MAAA,IAAAC,eAAA;MACnB,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI;QAAEG,OAAO,EAAE;MAA6B,CAAC;IACzE;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAgB,IAAK;EACnD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMR,SAAS,CAACgB,GAAG,CAACD,QAAQ,CAAC;IAC9C,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,QAAQ,GAAG,MAAAA,CAAOH,QAAgB,EAAEL,IAAS,KAAK;EAC7D,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMR,SAAS,CAACS,IAAI,CAACM,QAAQ,EAAEL,IAAI,CAAC;IACrD,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdM,OAAO,CAACN,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}